1-Iniciar el repositorio
git init o git clone

2-Ver el estado del proyecto
git status

3-Agregar al area de trabajo
git add nombre.archivo

4-Decir quien eres
git config (--global) user.email "your mail"
git config (--global) user.name "your name"

5-Agregar al pryecto
git commit nombre.archivo

6-Ver los commits
git log

7-Restaurar un archivo 
git restore nombre.archivo

8-Ver las modificaciones que se hicieron
git diff nombre.archivo

9-Crear un archivo ignorador
.gitignore
nombreCarpeta
nombre.archivo

10-Agregar comentarios sin usar vim
git commit -m "comentario"

11-Regresar a un commit anterior
git checkout #hash

12-Ver ramas
git branch

13-Crear un rama
git branch nombreRamaNueva

14-Cambiar de rama
git checkout nombreRama

15-Borrar una rama localmente
git branch -d branchName
	The -d option stands for --delete, which would delete the local branch, only if you have already pushed and merged it with your remote branches.
git branch -D branchName
	The -D option stands for --delete --force, which deletes the branch regardless of its push and merge status, so be careful using this one!

16-Borra una rama remota (no probado)
git push <remote_name> --delete <branch_name>
git push <remote_name> :<branch_name>

17-Agregar todos los archivos nuevos
git add .

18-Agregar la direcci√≥n del repositorio github
git remote add origin <url>

19-Subir el commit o el proyecto a github
git push -u origin master